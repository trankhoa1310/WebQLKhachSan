//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbKhachSanEntities : DbContext
    {
        public dbKhachSanEntities()
            : base("name=dbKhachSanEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ChucVu> ChucVus { get; set; }
        public virtual DbSet<DangKiDatPhong> DangKiDatPhongs { get; set; }
        public virtual DbSet<DatPhong> DatPhongs { get; set; }
        public virtual DbSet<DichVu> DichVus { get; set; }
        public virtual DbSet<GiaoDich> GiaoDiches { get; set; }
        public virtual DbSet<HinhAnh> HinhAnhs { get; set; }
        public virtual DbSet<KhachHang> KhachHangs { get; set; }
        public virtual DbSet<KhachSan> KhachSans { get; set; }
        public virtual DbSet<LoaiPhong> LoaiPhongs { get; set; }
        public virtual DbSet<Phong> Phongs { get; set; }
        public virtual DbSet<Phong_HinhAnh> Phong_HinhAnh { get; set; }
        public virtual DbSet<Quyen> Quyens { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TaiKhoan> TaiKhoans { get; set; }
        public virtual DbSet<TinhThanh> TinhThanhs { get; set; }
        public virtual DbSet<ViTri> ViTris { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int SP_ChucVu_Delete(Nullable<int> iDChucVu)
        {
            var iDChucVuParameter = iDChucVu.HasValue ?
                new ObjectParameter("IDChucVu", iDChucVu) :
                new ObjectParameter("IDChucVu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ChucVu_Delete", iDChucVuParameter);
        }
    
        public virtual ObjectResult<SP_ChucVu_GetAll_Result> SP_ChucVu_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ChucVu_GetAll_Result>("SP_ChucVu_GetAll");
        }
    
        public virtual ObjectResult<SP_ChucVu_GetByIDChucVu_Result> SP_ChucVu_GetByIDChucVu(Nullable<int> iDChucVu)
        {
            var iDChucVuParameter = iDChucVu.HasValue ?
                new ObjectParameter("IDChucVu", iDChucVu) :
                new ObjectParameter("IDChucVu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ChucVu_GetByIDChucVu_Result>("SP_ChucVu_GetByIDChucVu", iDChucVuParameter);
        }
    
        public virtual int SP_ChucVu_Insert(string ghiChu, Nullable<bool> isDelete, string tenCV)
        {
            var ghiChuParameter = ghiChu != null ?
                new ObjectParameter("GhiChu", ghiChu) :
                new ObjectParameter("GhiChu", typeof(string));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("IsDelete", isDelete) :
                new ObjectParameter("IsDelete", typeof(bool));
    
            var tenCVParameter = tenCV != null ?
                new ObjectParameter("TenCV", tenCV) :
                new ObjectParameter("TenCV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ChucVu_Insert", ghiChuParameter, isDeleteParameter, tenCVParameter);
        }
    
        public virtual int SP_ChucVu_Update(string ghiChu, Nullable<int> iDChucVu, Nullable<bool> isDelete, string tenCV)
        {
            var ghiChuParameter = ghiChu != null ?
                new ObjectParameter("GhiChu", ghiChu) :
                new ObjectParameter("GhiChu", typeof(string));
    
            var iDChucVuParameter = iDChucVu.HasValue ?
                new ObjectParameter("IDChucVu", iDChucVu) :
                new ObjectParameter("IDChucVu", typeof(int));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("IsDelete", isDelete) :
                new ObjectParameter("IsDelete", typeof(bool));
    
            var tenCVParameter = tenCV != null ?
                new ObjectParameter("TenCV", tenCV) :
                new ObjectParameter("TenCV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ChucVu_Update", ghiChuParameter, iDChucVuParameter, isDeleteParameter, tenCVParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int SP_DangKiDatPhong_Delete(Nullable<int> iD_DangKi)
        {
            var iD_DangKiParameter = iD_DangKi.HasValue ?
                new ObjectParameter("ID_DangKi", iD_DangKi) :
                new ObjectParameter("ID_DangKi", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DangKiDatPhong_Delete", iD_DangKiParameter);
        }
    
        public virtual ObjectResult<SP_DangKiDatPhong_GetAll_Result> SP_DangKiDatPhong_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DangKiDatPhong_GetAll_Result>("SP_DangKiDatPhong_GetAll");
        }
    
        public virtual ObjectResult<SP_DangKiDatPhong_GetByID_DangKi_Result> SP_DangKiDatPhong_GetByID_DangKi(Nullable<int> iD_DangKi)
        {
            var iD_DangKiParameter = iD_DangKi.HasValue ?
                new ObjectParameter("ID_DangKi", iD_DangKi) :
                new ObjectParameter("ID_DangKi", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DangKiDatPhong_GetByID_DangKi_Result>("SP_DangKiDatPhong_GetByID_DangKi", iD_DangKiParameter);
        }
    
        public virtual int SP_DangKiDatPhong_Insert(string email, string ghiChu, string hoTen, Nullable<int> iD_Phong, string message, Nullable<System.DateTime> ngayTao, string phone, Nullable<byte> status, Nullable<System.DateTime> timeEnd, Nullable<System.DateTime> timeStart)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var ghiChuParameter = ghiChu != null ?
                new ObjectParameter("GhiChu", ghiChu) :
                new ObjectParameter("GhiChu", typeof(string));
    
            var hoTenParameter = hoTen != null ?
                new ObjectParameter("HoTen", hoTen) :
                new ObjectParameter("HoTen", typeof(string));
    
            var iD_PhongParameter = iD_Phong.HasValue ?
                new ObjectParameter("ID_Phong", iD_Phong) :
                new ObjectParameter("ID_Phong", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var ngayTaoParameter = ngayTao.HasValue ?
                new ObjectParameter("NgayTao", ngayTao) :
                new ObjectParameter("NgayTao", typeof(System.DateTime));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            var timeEndParameter = timeEnd.HasValue ?
                new ObjectParameter("TimeEnd", timeEnd) :
                new ObjectParameter("TimeEnd", typeof(System.DateTime));
    
            var timeStartParameter = timeStart.HasValue ?
                new ObjectParameter("TimeStart", timeStart) :
                new ObjectParameter("TimeStart", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DangKiDatPhong_Insert", emailParameter, ghiChuParameter, hoTenParameter, iD_PhongParameter, messageParameter, ngayTaoParameter, phoneParameter, statusParameter, timeEndParameter, timeStartParameter);
        }
    
        public virtual int SP_DangKiDatPhong_Update(string email, string ghiChu, string hoTen, Nullable<int> iD_DangKi, Nullable<int> iD_Phong, string message, Nullable<System.DateTime> ngayTao, string phone, Nullable<byte> status, Nullable<System.DateTime> timeEnd, Nullable<System.DateTime> timeStart)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var ghiChuParameter = ghiChu != null ?
                new ObjectParameter("GhiChu", ghiChu) :
                new ObjectParameter("GhiChu", typeof(string));
    
            var hoTenParameter = hoTen != null ?
                new ObjectParameter("HoTen", hoTen) :
                new ObjectParameter("HoTen", typeof(string));
    
            var iD_DangKiParameter = iD_DangKi.HasValue ?
                new ObjectParameter("ID_DangKi", iD_DangKi) :
                new ObjectParameter("ID_DangKi", typeof(int));
    
            var iD_PhongParameter = iD_Phong.HasValue ?
                new ObjectParameter("ID_Phong", iD_Phong) :
                new ObjectParameter("ID_Phong", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var ngayTaoParameter = ngayTao.HasValue ?
                new ObjectParameter("NgayTao", ngayTao) :
                new ObjectParameter("NgayTao", typeof(System.DateTime));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            var timeEndParameter = timeEnd.HasValue ?
                new ObjectParameter("TimeEnd", timeEnd) :
                new ObjectParameter("TimeEnd", typeof(System.DateTime));
    
            var timeStartParameter = timeStart.HasValue ?
                new ObjectParameter("TimeStart", timeStart) :
                new ObjectParameter("TimeStart", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DangKiDatPhong_Update", emailParameter, ghiChuParameter, hoTenParameter, iD_DangKiParameter, iD_PhongParameter, messageParameter, ngayTaoParameter, phoneParameter, statusParameter, timeEndParameter, timeStartParameter);
        }
    
        public virtual int SP_DatPhong_Delete(Nullable<int> iDDatPhong)
        {
            var iDDatPhongParameter = iDDatPhong.HasValue ?
                new ObjectParameter("IDDatPhong", iDDatPhong) :
                new ObjectParameter("IDDatPhong", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DatPhong_Delete", iDDatPhongParameter);
        }
    
        public virtual ObjectResult<SP_DatPhong_GetAll_Result> SP_DatPhong_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DatPhong_GetAll_Result>("SP_DatPhong_GetAll");
        }
    
        public virtual ObjectResult<SP_DatPhong_GetByIDDatPhong_Result> SP_DatPhong_GetByIDDatPhong(Nullable<int> iDDatPhong)
        {
            var iDDatPhongParameter = iDDatPhong.HasValue ?
                new ObjectParameter("IDDatPhong", iDDatPhong) :
                new ObjectParameter("IDDatPhong", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DatPhong_GetByIDDatPhong_Result>("SP_DatPhong_GetByIDDatPhong", iDDatPhongParameter);
        }
    
        public virtual int SP_DatPhong_Insert(Nullable<System.DateTime> batDau, Nullable<System.Guid> iDKhachHang, Nullable<int> iDPhong, Nullable<int> iDTaiKhoan, Nullable<System.DateTime> ketThuc, Nullable<bool> status, Nullable<long> thanhToan, Nullable<long> tongTien)
        {
            var batDauParameter = batDau.HasValue ?
                new ObjectParameter("BatDau", batDau) :
                new ObjectParameter("BatDau", typeof(System.DateTime));
    
            var iDKhachHangParameter = iDKhachHang.HasValue ?
                new ObjectParameter("IDKhachHang", iDKhachHang) :
                new ObjectParameter("IDKhachHang", typeof(System.Guid));
    
            var iDPhongParameter = iDPhong.HasValue ?
                new ObjectParameter("IDPhong", iDPhong) :
                new ObjectParameter("IDPhong", typeof(int));
    
            var iDTaiKhoanParameter = iDTaiKhoan.HasValue ?
                new ObjectParameter("IDTaiKhoan", iDTaiKhoan) :
                new ObjectParameter("IDTaiKhoan", typeof(int));
    
            var ketThucParameter = ketThuc.HasValue ?
                new ObjectParameter("KetThuc", ketThuc) :
                new ObjectParameter("KetThuc", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var thanhToanParameter = thanhToan.HasValue ?
                new ObjectParameter("ThanhToan", thanhToan) :
                new ObjectParameter("ThanhToan", typeof(long));
    
            var tongTienParameter = tongTien.HasValue ?
                new ObjectParameter("TongTien", tongTien) :
                new ObjectParameter("TongTien", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DatPhong_Insert", batDauParameter, iDKhachHangParameter, iDPhongParameter, iDTaiKhoanParameter, ketThucParameter, statusParameter, thanhToanParameter, tongTienParameter);
        }
    
        public virtual int SP_DatPhong_Update(Nullable<System.DateTime> batDau, Nullable<int> iDDatPhong, Nullable<System.Guid> iDKhachHang, Nullable<int> iDPhong, Nullable<int> iDTaiKhoan, Nullable<System.DateTime> ketThuc, Nullable<bool> status, Nullable<long> thanhToan, Nullable<long> tongTien)
        {
            var batDauParameter = batDau.HasValue ?
                new ObjectParameter("BatDau", batDau) :
                new ObjectParameter("BatDau", typeof(System.DateTime));
    
            var iDDatPhongParameter = iDDatPhong.HasValue ?
                new ObjectParameter("IDDatPhong", iDDatPhong) :
                new ObjectParameter("IDDatPhong", typeof(int));
    
            var iDKhachHangParameter = iDKhachHang.HasValue ?
                new ObjectParameter("IDKhachHang", iDKhachHang) :
                new ObjectParameter("IDKhachHang", typeof(System.Guid));
    
            var iDPhongParameter = iDPhong.HasValue ?
                new ObjectParameter("IDPhong", iDPhong) :
                new ObjectParameter("IDPhong", typeof(int));
    
            var iDTaiKhoanParameter = iDTaiKhoan.HasValue ?
                new ObjectParameter("IDTaiKhoan", iDTaiKhoan) :
                new ObjectParameter("IDTaiKhoan", typeof(int));
    
            var ketThucParameter = ketThuc.HasValue ?
                new ObjectParameter("KetThuc", ketThuc) :
                new ObjectParameter("KetThuc", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var thanhToanParameter = thanhToan.HasValue ?
                new ObjectParameter("ThanhToan", thanhToan) :
                new ObjectParameter("ThanhToan", typeof(long));
    
            var tongTienParameter = tongTien.HasValue ?
                new ObjectParameter("TongTien", tongTien) :
                new ObjectParameter("TongTien", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DatPhong_Update", batDauParameter, iDDatPhongParameter, iDKhachHangParameter, iDPhongParameter, iDTaiKhoanParameter, ketThucParameter, statusParameter, thanhToanParameter, tongTienParameter);
        }
    
        public virtual int SP_DichVu_Delete(Nullable<int> iDDichVu)
        {
            var iDDichVuParameter = iDDichVu.HasValue ?
                new ObjectParameter("IDDichVu", iDDichVu) :
                new ObjectParameter("IDDichVu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DichVu_Delete", iDDichVuParameter);
        }
    
        public virtual ObjectResult<SP_DichVu_GetAll_Result> SP_DichVu_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DichVu_GetAll_Result>("SP_DichVu_GetAll");
        }
    
        public virtual ObjectResult<SP_DichVu_GetByIDDichVu_Result> SP_DichVu_GetByIDDichVu(Nullable<int> iDDichVu)
        {
            var iDDichVuParameter = iDDichVu.HasValue ?
                new ObjectParameter("IDDichVu", iDDichVu) :
                new ObjectParameter("IDDichVu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DichVu_GetByIDDichVu_Result>("SP_DichVu_GetByIDDichVu", iDDichVuParameter);
        }
    
        public virtual int SP_DichVu_Insert(Nullable<bool> active, string donVi, string ghiChu, Nullable<long> giaTien, Nullable<bool> isDelete, string tenDichVu)
        {
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var donViParameter = donVi != null ?
                new ObjectParameter("DonVi", donVi) :
                new ObjectParameter("DonVi", typeof(string));
    
            var ghiChuParameter = ghiChu != null ?
                new ObjectParameter("GhiChu", ghiChu) :
                new ObjectParameter("GhiChu", typeof(string));
    
            var giaTienParameter = giaTien.HasValue ?
                new ObjectParameter("GiaTien", giaTien) :
                new ObjectParameter("GiaTien", typeof(long));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("IsDelete", isDelete) :
                new ObjectParameter("IsDelete", typeof(bool));
    
            var tenDichVuParameter = tenDichVu != null ?
                new ObjectParameter("TenDichVu", tenDichVu) :
                new ObjectParameter("TenDichVu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DichVu_Insert", activeParameter, donViParameter, ghiChuParameter, giaTienParameter, isDeleteParameter, tenDichVuParameter);
        }
    
        public virtual int SP_DichVu_Update(Nullable<bool> active, string donVi, string ghiChu, Nullable<long> giaTien, Nullable<int> iDDichVu, Nullable<bool> isDelete, string tenDichVu)
        {
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var donViParameter = donVi != null ?
                new ObjectParameter("DonVi", donVi) :
                new ObjectParameter("DonVi", typeof(string));
    
            var ghiChuParameter = ghiChu != null ?
                new ObjectParameter("GhiChu", ghiChu) :
                new ObjectParameter("GhiChu", typeof(string));
    
            var giaTienParameter = giaTien.HasValue ?
                new ObjectParameter("GiaTien", giaTien) :
                new ObjectParameter("GiaTien", typeof(long));
    
            var iDDichVuParameter = iDDichVu.HasValue ?
                new ObjectParameter("IDDichVu", iDDichVu) :
                new ObjectParameter("IDDichVu", typeof(int));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("IsDelete", isDelete) :
                new ObjectParameter("IsDelete", typeof(bool));
    
            var tenDichVuParameter = tenDichVu != null ?
                new ObjectParameter("TenDichVu", tenDichVu) :
                new ObjectParameter("TenDichVu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DichVu_Update", activeParameter, donViParameter, ghiChuParameter, giaTienParameter, iDDichVuParameter, isDeleteParameter, tenDichVuParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_GiaoDich_Delete(Nullable<int> iDGiaoDich)
        {
            var iDGiaoDichParameter = iDGiaoDich.HasValue ?
                new ObjectParameter("IDGiaoDich", iDGiaoDich) :
                new ObjectParameter("IDGiaoDich", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GiaoDich_Delete", iDGiaoDichParameter);
        }
    
        public virtual ObjectResult<SP_GiaoDich_GetAll_Result> SP_GiaoDich_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GiaoDich_GetAll_Result>("SP_GiaoDich_GetAll");
        }
    
        public virtual ObjectResult<SP_GiaoDich_GetBy_IDDatPhong_Result> SP_GiaoDich_GetBy_IDDatPhong(Nullable<int> iDDatPhong)
        {
            var iDDatPhongParameter = iDDatPhong.HasValue ?
                new ObjectParameter("IDDatPhong", iDDatPhong) :
                new ObjectParameter("IDDatPhong", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GiaoDich_GetBy_IDDatPhong_Result>("SP_GiaoDich_GetBy_IDDatPhong", iDDatPhongParameter);
        }
    
        public virtual ObjectResult<SP_GiaoDich_GetByIDGiaoDich_Result> SP_GiaoDich_GetByIDGiaoDich(Nullable<int> iDGiaoDich)
        {
            var iDGiaoDichParameter = iDGiaoDich.HasValue ?
                new ObjectParameter("IDGiaoDich", iDGiaoDich) :
                new ObjectParameter("IDGiaoDich", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GiaoDich_GetByIDGiaoDich_Result>("SP_GiaoDich_GetByIDGiaoDich", iDGiaoDichParameter);
        }
    
        public virtual int SP_GiaoDich_Insert(Nullable<System.DateTime> buyTime, Nullable<int> iDDatPhong, Nullable<int> iDDichVu, Nullable<int> iDTaiKhoan, Nullable<int> soLuong)
        {
            var buyTimeParameter = buyTime.HasValue ?
                new ObjectParameter("BuyTime", buyTime) :
                new ObjectParameter("BuyTime", typeof(System.DateTime));
    
            var iDDatPhongParameter = iDDatPhong.HasValue ?
                new ObjectParameter("IDDatPhong", iDDatPhong) :
                new ObjectParameter("IDDatPhong", typeof(int));
    
            var iDDichVuParameter = iDDichVu.HasValue ?
                new ObjectParameter("IDDichVu", iDDichVu) :
                new ObjectParameter("IDDichVu", typeof(int));
    
            var iDTaiKhoanParameter = iDTaiKhoan.HasValue ?
                new ObjectParameter("IDTaiKhoan", iDTaiKhoan) :
                new ObjectParameter("IDTaiKhoan", typeof(int));
    
            var soLuongParameter = soLuong.HasValue ?
                new ObjectParameter("SoLuong", soLuong) :
                new ObjectParameter("SoLuong", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GiaoDich_Insert", buyTimeParameter, iDDatPhongParameter, iDDichVuParameter, iDTaiKhoanParameter, soLuongParameter);
        }
    
        public virtual int SP_GiaoDich_Update(Nullable<System.DateTime> buyTime, Nullable<int> iDDatPhong, Nullable<int> iDDichVu, Nullable<int> iDGiaoDich, Nullable<int> iDTaiKhoan, Nullable<int> soLuong)
        {
            var buyTimeParameter = buyTime.HasValue ?
                new ObjectParameter("BuyTime", buyTime) :
                new ObjectParameter("BuyTime", typeof(System.DateTime));
    
            var iDDatPhongParameter = iDDatPhong.HasValue ?
                new ObjectParameter("IDDatPhong", iDDatPhong) :
                new ObjectParameter("IDDatPhong", typeof(int));
    
            var iDDichVuParameter = iDDichVu.HasValue ?
                new ObjectParameter("IDDichVu", iDDichVu) :
                new ObjectParameter("IDDichVu", typeof(int));
    
            var iDGiaoDichParameter = iDGiaoDich.HasValue ?
                new ObjectParameter("IDGiaoDich", iDGiaoDich) :
                new ObjectParameter("IDGiaoDich", typeof(int));
    
            var iDTaiKhoanParameter = iDTaiKhoan.HasValue ?
                new ObjectParameter("IDTaiKhoan", iDTaiKhoan) :
                new ObjectParameter("IDTaiKhoan", typeof(int));
    
            var soLuongParameter = soLuong.HasValue ?
                new ObjectParameter("SoLuong", soLuong) :
                new ObjectParameter("SoLuong", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GiaoDich_Update", buyTimeParameter, iDDatPhongParameter, iDDichVuParameter, iDGiaoDichParameter, iDTaiKhoanParameter, soLuongParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_HinhAnh_Delete(Nullable<int> iDHinhAnh)
        {
            var iDHinhAnhParameter = iDHinhAnh.HasValue ?
                new ObjectParameter("IDHinhAnh", iDHinhAnh) :
                new ObjectParameter("IDHinhAnh", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HinhAnh_Delete", iDHinhAnhParameter);
        }
    
        public virtual ObjectResult<SP_HinhAnh_GetAll_Result> SP_HinhAnh_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HinhAnh_GetAll_Result>("SP_HinhAnh_GetAll");
        }
    
        public virtual ObjectResult<SP_HinhAnh_GetByIDHinhAnh_Result> SP_HinhAnh_GetByIDHinhAnh(Nullable<int> iDHinhAnh)
        {
            var iDHinhAnhParameter = iDHinhAnh.HasValue ?
                new ObjectParameter("IDHinhAnh", iDHinhAnh) :
                new ObjectParameter("IDHinhAnh", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HinhAnh_GetByIDHinhAnh_Result>("SP_HinhAnh_GetByIDHinhAnh", iDHinhAnhParameter);
        }
    
        public virtual int SP_HinhAnh_Insert(string imageLink, Nullable<bool> isDelete, Nullable<int> rank)
        {
            var imageLinkParameter = imageLink != null ?
                new ObjectParameter("ImageLink", imageLink) :
                new ObjectParameter("ImageLink", typeof(string));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("IsDelete", isDelete) :
                new ObjectParameter("IsDelete", typeof(bool));
    
            var rankParameter = rank.HasValue ?
                new ObjectParameter("Rank", rank) :
                new ObjectParameter("Rank", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HinhAnh_Insert", imageLinkParameter, isDeleteParameter, rankParameter);
        }
    
        public virtual int SP_HinhAnh_Update(Nullable<int> iDHinhAnh, string imageLink, Nullable<bool> isDelete, Nullable<int> rank)
        {
            var iDHinhAnhParameter = iDHinhAnh.HasValue ?
                new ObjectParameter("IDHinhAnh", iDHinhAnh) :
                new ObjectParameter("IDHinhAnh", typeof(int));
    
            var imageLinkParameter = imageLink != null ?
                new ObjectParameter("ImageLink", imageLink) :
                new ObjectParameter("ImageLink", typeof(string));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("IsDelete", isDelete) :
                new ObjectParameter("IsDelete", typeof(bool));
    
            var rankParameter = rank.HasValue ?
                new ObjectParameter("Rank", rank) :
                new ObjectParameter("Rank", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_HinhAnh_Update", iDHinhAnhParameter, imageLinkParameter, isDeleteParameter, rankParameter);
        }
    
        public virtual int SP_KhachHang_Delete(Nullable<System.Guid> iDKhachHang)
        {
            var iDKhachHangParameter = iDKhachHang.HasValue ?
                new ObjectParameter("IDKhachHang", iDKhachHang) :
                new ObjectParameter("IDKhachHang", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_KhachHang_Delete", iDKhachHangParameter);
        }
    
        public virtual ObjectResult<SP_KhachHang_GetAll_Result> SP_KhachHang_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_KhachHang_GetAll_Result>("SP_KhachHang_GetAll");
        }
    
        public virtual ObjectResult<SP_KhachHang_GetByIDKhachHang_Result> SP_KhachHang_GetByIDKhachHang(Nullable<System.Guid> iDKhachHang)
        {
            var iDKhachHangParameter = iDKhachHang.HasValue ?
                new ObjectParameter("IDKhachHang", iDKhachHang) :
                new ObjectParameter("IDKhachHang", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_KhachHang_GetByIDKhachHang_Result>("SP_KhachHang_GetByIDKhachHang", iDKhachHangParameter);
        }
    
        public virtual int SP_KhachHang_Insert(string cMT, string diaChi, string ghiChu, string hoTen, Nullable<System.Guid> iDKhachHang, Nullable<bool> isDelete, Nullable<bool> isMale, Nullable<System.DateTime> ngaySinh, string sDT)
        {
            var cMTParameter = cMT != null ?
                new ObjectParameter("CMT", cMT) :
                new ObjectParameter("CMT", typeof(string));
    
            var diaChiParameter = diaChi != null ?
                new ObjectParameter("DiaChi", diaChi) :
                new ObjectParameter("DiaChi", typeof(string));
    
            var ghiChuParameter = ghiChu != null ?
                new ObjectParameter("GhiChu", ghiChu) :
                new ObjectParameter("GhiChu", typeof(string));
    
            var hoTenParameter = hoTen != null ?
                new ObjectParameter("HoTen", hoTen) :
                new ObjectParameter("HoTen", typeof(string));
    
            var iDKhachHangParameter = iDKhachHang.HasValue ?
                new ObjectParameter("IDKhachHang", iDKhachHang) :
                new ObjectParameter("IDKhachHang", typeof(System.Guid));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("IsDelete", isDelete) :
                new ObjectParameter("IsDelete", typeof(bool));
    
            var isMaleParameter = isMale.HasValue ?
                new ObjectParameter("IsMale", isMale) :
                new ObjectParameter("IsMale", typeof(bool));
    
            var ngaySinhParameter = ngaySinh.HasValue ?
                new ObjectParameter("NgaySinh", ngaySinh) :
                new ObjectParameter("NgaySinh", typeof(System.DateTime));
    
            var sDTParameter = sDT != null ?
                new ObjectParameter("SDT", sDT) :
                new ObjectParameter("SDT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_KhachHang_Insert", cMTParameter, diaChiParameter, ghiChuParameter, hoTenParameter, iDKhachHangParameter, isDeleteParameter, isMaleParameter, ngaySinhParameter, sDTParameter);
        }
    
        public virtual int SP_KhachHang_Update(string cMT, string diaChi, string ghiChu, string hoTen, Nullable<System.Guid> iDKhachHang, Nullable<bool> isDelete, Nullable<bool> isMale, Nullable<System.DateTime> ngaySinh, string sDT)
        {
            var cMTParameter = cMT != null ?
                new ObjectParameter("CMT", cMT) :
                new ObjectParameter("CMT", typeof(string));
    
            var diaChiParameter = diaChi != null ?
                new ObjectParameter("DiaChi", diaChi) :
                new ObjectParameter("DiaChi", typeof(string));
    
            var ghiChuParameter = ghiChu != null ?
                new ObjectParameter("GhiChu", ghiChu) :
                new ObjectParameter("GhiChu", typeof(string));
    
            var hoTenParameter = hoTen != null ?
                new ObjectParameter("HoTen", hoTen) :
                new ObjectParameter("HoTen", typeof(string));
    
            var iDKhachHangParameter = iDKhachHang.HasValue ?
                new ObjectParameter("IDKhachHang", iDKhachHang) :
                new ObjectParameter("IDKhachHang", typeof(System.Guid));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("IsDelete", isDelete) :
                new ObjectParameter("IsDelete", typeof(bool));
    
            var isMaleParameter = isMale.HasValue ?
                new ObjectParameter("IsMale", isMale) :
                new ObjectParameter("IsMale", typeof(bool));
    
            var ngaySinhParameter = ngaySinh.HasValue ?
                new ObjectParameter("NgaySinh", ngaySinh) :
                new ObjectParameter("NgaySinh", typeof(System.DateTime));
    
            var sDTParameter = sDT != null ?
                new ObjectParameter("SDT", sDT) :
                new ObjectParameter("SDT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_KhachHang_Update", cMTParameter, diaChiParameter, ghiChuParameter, hoTenParameter, iDKhachHangParameter, isDeleteParameter, isMaleParameter, ngaySinhParameter, sDTParameter);
        }
    
        public virtual int SP_LoaiPhong_Delete(Nullable<int> iD_LoaiPhong)
        {
            var iD_LoaiPhongParameter = iD_LoaiPhong.HasValue ?
                new ObjectParameter("ID_LoaiPhong", iD_LoaiPhong) :
                new ObjectParameter("ID_LoaiPhong", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LoaiPhong_Delete", iD_LoaiPhongParameter);
        }
    
        public virtual ObjectResult<SP_LoaiPhong_GetAll_Result> SP_LoaiPhong_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LoaiPhong_GetAll_Result>("SP_LoaiPhong_GetAll");
        }
    
        public virtual ObjectResult<SP_LoaiPhong_GetByID_LoaiPhong_Result> SP_LoaiPhong_GetByID_LoaiPhong(Nullable<int> iD_LoaiPhong)
        {
            var iD_LoaiPhongParameter = iD_LoaiPhong.HasValue ?
                new ObjectParameter("ID_LoaiPhong", iD_LoaiPhong) :
                new ObjectParameter("ID_LoaiPhong", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LoaiPhong_GetByID_LoaiPhong_Result>("SP_LoaiPhong_GetByID_LoaiPhong", iD_LoaiPhongParameter);
        }
    
        public virtual int SP_LoaiPhong_Insert(string ghiChu, string tenLoai)
        {
            var ghiChuParameter = ghiChu != null ?
                new ObjectParameter("GhiChu", ghiChu) :
                new ObjectParameter("GhiChu", typeof(string));
    
            var tenLoaiParameter = tenLoai != null ?
                new ObjectParameter("TenLoai", tenLoai) :
                new ObjectParameter("TenLoai", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LoaiPhong_Insert", ghiChuParameter, tenLoaiParameter);
        }
    
        public virtual int SP_LoaiPhong_Update(string ghiChu, Nullable<int> iD_LoaiPhong, string tenLoai)
        {
            var ghiChuParameter = ghiChu != null ?
                new ObjectParameter("GhiChu", ghiChu) :
                new ObjectParameter("GhiChu", typeof(string));
    
            var iD_LoaiPhongParameter = iD_LoaiPhong.HasValue ?
                new ObjectParameter("ID_LoaiPhong", iD_LoaiPhong) :
                new ObjectParameter("ID_LoaiPhong", typeof(int));
    
            var tenLoaiParameter = tenLoai != null ?
                new ObjectParameter("TenLoai", tenLoai) :
                new ObjectParameter("TenLoai", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_LoaiPhong_Update", ghiChuParameter, iD_LoaiPhongParameter, tenLoaiParameter);
        }
    
        public virtual int SP_PhanQuyen_Delete(Nullable<int> iDQuyen, Nullable<int> iDTaiKhoan)
        {
            var iDQuyenParameter = iDQuyen.HasValue ?
                new ObjectParameter("IDQuyen", iDQuyen) :
                new ObjectParameter("IDQuyen", typeof(int));
    
            var iDTaiKhoanParameter = iDTaiKhoan.HasValue ?
                new ObjectParameter("IDTaiKhoan", iDTaiKhoan) :
                new ObjectParameter("IDTaiKhoan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PhanQuyen_Delete", iDQuyenParameter, iDTaiKhoanParameter);
        }
    
        public virtual ObjectResult<SP_PhanQuyen_GetAll_Result> SP_PhanQuyen_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PhanQuyen_GetAll_Result>("SP_PhanQuyen_GetAll");
        }
    
        public virtual ObjectResult<SP_PhanQuyen_GetByIDQuyen_Result> SP_PhanQuyen_GetByIDQuyen(Nullable<int> iDQuyen)
        {
            var iDQuyenParameter = iDQuyen.HasValue ?
                new ObjectParameter("IDQuyen", iDQuyen) :
                new ObjectParameter("IDQuyen", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PhanQuyen_GetByIDQuyen_Result>("SP_PhanQuyen_GetByIDQuyen", iDQuyenParameter);
        }
    
        public virtual ObjectResult<SP_PhanQuyen_GetByIDTaiKhoan_Result> SP_PhanQuyen_GetByIDTaiKhoan(Nullable<int> iDTaiKhoan)
        {
            var iDTaiKhoanParameter = iDTaiKhoan.HasValue ?
                new ObjectParameter("IDTaiKhoan", iDTaiKhoan) :
                new ObjectParameter("IDTaiKhoan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_PhanQuyen_GetByIDTaiKhoan_Result>("SP_PhanQuyen_GetByIDTaiKhoan", iDTaiKhoanParameter);
        }
    
        public virtual int SP_PhanQuyen_Insert(Nullable<int> iDQuyen, Nullable<int> iDTaiKhoan)
        {
            var iDQuyenParameter = iDQuyen.HasValue ?
                new ObjectParameter("IDQuyen", iDQuyen) :
                new ObjectParameter("IDQuyen", typeof(int));
    
            var iDTaiKhoanParameter = iDTaiKhoan.HasValue ?
                new ObjectParameter("IDTaiKhoan", iDTaiKhoan) :
                new ObjectParameter("IDTaiKhoan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_PhanQuyen_Insert", iDQuyenParameter, iDTaiKhoanParameter);
        }
    
        public virtual int SP_Phong_Delete(Nullable<int> iDPhong)
        {
            var iDPhongParameter = iDPhong.HasValue ?
                new ObjectParameter("IDPhong", iDPhong) :
                new ObjectParameter("IDPhong", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Phong_Delete", iDPhongParameter);
        }
    
        public virtual ObjectResult<SP_Phong_GetAll_Result> SP_Phong_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Phong_GetAll_Result>("SP_Phong_GetAll");
        }
    
        public virtual ObjectResult<SP_Phong_GetByIDPhong_Result> SP_Phong_GetByIDPhong(Nullable<int> iDPhong)
        {
            var iDPhongParameter = iDPhong.HasValue ?
                new ObjectParameter("IDPhong", iDPhong) :
                new ObjectParameter("IDPhong", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Phong_GetByIDPhong_Result>("SP_Phong_GetByIDPhong", iDPhongParameter);
        }
    
        public virtual int SP_Phong_HinhAnh_Delete(Nullable<int> iDPhong_HinhAnh)
        {
            var iDPhong_HinhAnhParameter = iDPhong_HinhAnh.HasValue ?
                new ObjectParameter("IDPhong_HinhAnh", iDPhong_HinhAnh) :
                new ObjectParameter("IDPhong_HinhAnh", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Phong_HinhAnh_Delete", iDPhong_HinhAnhParameter);
        }
    
        public virtual ObjectResult<SP_Phong_HinhAnh_GetAll_Result> SP_Phong_HinhAnh_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Phong_HinhAnh_GetAll_Result>("SP_Phong_HinhAnh_GetAll");
        }
    
        public virtual ObjectResult<SP_Phong_HinhAnh_GetByIDPhong_Result> SP_Phong_HinhAnh_GetByIDPhong(Nullable<int> iDPhong)
        {
            var iDPhongParameter = iDPhong.HasValue ?
                new ObjectParameter("IDPhong", iDPhong) :
                new ObjectParameter("IDPhong", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Phong_HinhAnh_GetByIDPhong_Result>("SP_Phong_HinhAnh_GetByIDPhong", iDPhongParameter);
        }
    
        public virtual ObjectResult<SP_Phong_HinhAnh_GetByIDPhong_HinhAnh_Result> SP_Phong_HinhAnh_GetByIDPhong_HinhAnh(Nullable<int> iDPhong_HinhAnh)
        {
            var iDPhong_HinhAnhParameter = iDPhong_HinhAnh.HasValue ?
                new ObjectParameter("IDPhong_HinhAnh", iDPhong_HinhAnh) :
                new ObjectParameter("IDPhong_HinhAnh", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Phong_HinhAnh_GetByIDPhong_HinhAnh_Result>("SP_Phong_HinhAnh_GetByIDPhong_HinhAnh", iDPhong_HinhAnhParameter);
        }
    
        public virtual int SP_Phong_HinhAnh_Insert(string ghiChu, Nullable<int> iDHinhAnh, Nullable<int> iDPhong, Nullable<int> rank)
        {
            var ghiChuParameter = ghiChu != null ?
                new ObjectParameter("GhiChu", ghiChu) :
                new ObjectParameter("GhiChu", typeof(string));
    
            var iDHinhAnhParameter = iDHinhAnh.HasValue ?
                new ObjectParameter("IDHinhAnh", iDHinhAnh) :
                new ObjectParameter("IDHinhAnh", typeof(int));
    
            var iDPhongParameter = iDPhong.HasValue ?
                new ObjectParameter("IDPhong", iDPhong) :
                new ObjectParameter("IDPhong", typeof(int));
    
            var rankParameter = rank.HasValue ?
                new ObjectParameter("Rank", rank) :
                new ObjectParameter("Rank", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Phong_HinhAnh_Insert", ghiChuParameter, iDHinhAnhParameter, iDPhongParameter, rankParameter);
        }
    
        public virtual int SP_Phong_HinhAnh_Update(string ghiChu, Nullable<int> iDHinhAnh, Nullable<int> iDPhong, Nullable<int> iDPhong_HinhAnh, Nullable<int> rank)
        {
            var ghiChuParameter = ghiChu != null ?
                new ObjectParameter("GhiChu", ghiChu) :
                new ObjectParameter("GhiChu", typeof(string));
    
            var iDHinhAnhParameter = iDHinhAnh.HasValue ?
                new ObjectParameter("IDHinhAnh", iDHinhAnh) :
                new ObjectParameter("IDHinhAnh", typeof(int));
    
            var iDPhongParameter = iDPhong.HasValue ?
                new ObjectParameter("IDPhong", iDPhong) :
                new ObjectParameter("IDPhong", typeof(int));
    
            var iDPhong_HinhAnhParameter = iDPhong_HinhAnh.HasValue ?
                new ObjectParameter("IDPhong_HinhAnh", iDPhong_HinhAnh) :
                new ObjectParameter("IDPhong_HinhAnh", typeof(int));
    
            var rankParameter = rank.HasValue ?
                new ObjectParameter("Rank", rank) :
                new ObjectParameter("Rank", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Phong_HinhAnh_Update", ghiChuParameter, iDHinhAnhParameter, iDPhongParameter, iDPhong_HinhAnhParameter, rankParameter);
        }
    
        public virtual int SP_Phong_Insert(Nullable<bool> active, Nullable<long> giaPhong, Nullable<int> iD_LoaiPhong, Nullable<int> iD_ViTri, Nullable<int> iDKhachSan, Nullable<bool> isDelete, string tenPhong, string trangThai, Nullable<int> giaKM, Nullable<int> star)
        {
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var giaPhongParameter = giaPhong.HasValue ?
                new ObjectParameter("GiaPhong", giaPhong) :
                new ObjectParameter("GiaPhong", typeof(long));
    
            var iD_LoaiPhongParameter = iD_LoaiPhong.HasValue ?
                new ObjectParameter("ID_LoaiPhong", iD_LoaiPhong) :
                new ObjectParameter("ID_LoaiPhong", typeof(int));
    
            var iD_ViTriParameter = iD_ViTri.HasValue ?
                new ObjectParameter("ID_ViTri", iD_ViTri) :
                new ObjectParameter("ID_ViTri", typeof(int));
    
            var iDKhachSanParameter = iDKhachSan.HasValue ?
                new ObjectParameter("IDKhachSan", iDKhachSan) :
                new ObjectParameter("IDKhachSan", typeof(int));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("IsDelete", isDelete) :
                new ObjectParameter("IsDelete", typeof(bool));
    
            var tenPhongParameter = tenPhong != null ?
                new ObjectParameter("TenPhong", tenPhong) :
                new ObjectParameter("TenPhong", typeof(string));
    
            var trangThaiParameter = trangThai != null ?
                new ObjectParameter("TrangThai", trangThai) :
                new ObjectParameter("TrangThai", typeof(string));
    
            var giaKMParameter = giaKM.HasValue ?
                new ObjectParameter("GiaKM", giaKM) :
                new ObjectParameter("GiaKM", typeof(int));
    
            var starParameter = star.HasValue ?
                new ObjectParameter("Star", star) :
                new ObjectParameter("Star", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Phong_Insert", activeParameter, giaPhongParameter, iD_LoaiPhongParameter, iD_ViTriParameter, iDKhachSanParameter, isDeleteParameter, tenPhongParameter, trangThaiParameter, giaKMParameter, starParameter);
        }
    
        public virtual int SP_Phong_Update(Nullable<bool> active, Nullable<long> giaPhong, Nullable<int> iD_LoaiPhong, Nullable<int> iDKhachSan, Nullable<int> iD_ViTri, Nullable<int> iDPhong, Nullable<bool> isDelete, string tenPhong, string trangThai, Nullable<int> giaKM, Nullable<int> star)
        {
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var giaPhongParameter = giaPhong.HasValue ?
                new ObjectParameter("GiaPhong", giaPhong) :
                new ObjectParameter("GiaPhong", typeof(long));
    
            var iD_LoaiPhongParameter = iD_LoaiPhong.HasValue ?
                new ObjectParameter("ID_LoaiPhong", iD_LoaiPhong) :
                new ObjectParameter("ID_LoaiPhong", typeof(int));
    
            var iDKhachSanParameter = iDKhachSan.HasValue ?
                new ObjectParameter("IDKhachSan", iDKhachSan) :
                new ObjectParameter("IDKhachSan", typeof(int));
    
            var iD_ViTriParameter = iD_ViTri.HasValue ?
                new ObjectParameter("ID_ViTri", iD_ViTri) :
                new ObjectParameter("ID_ViTri", typeof(int));
    
            var iDPhongParameter = iDPhong.HasValue ?
                new ObjectParameter("IDPhong", iDPhong) :
                new ObjectParameter("IDPhong", typeof(int));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("IsDelete", isDelete) :
                new ObjectParameter("IsDelete", typeof(bool));
    
            var tenPhongParameter = tenPhong != null ?
                new ObjectParameter("TenPhong", tenPhong) :
                new ObjectParameter("TenPhong", typeof(string));
    
            var trangThaiParameter = trangThai != null ?
                new ObjectParameter("TrangThai", trangThai) :
                new ObjectParameter("TrangThai", typeof(string));
    
            var giaKMParameter = giaKM.HasValue ?
                new ObjectParameter("GiaKM", giaKM) :
                new ObjectParameter("GiaKM", typeof(int));
    
            var starParameter = star.HasValue ?
                new ObjectParameter("Star", star) :
                new ObjectParameter("Star", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Phong_Update", activeParameter, giaPhongParameter, iD_LoaiPhongParameter, iDKhachSanParameter, iD_ViTriParameter, iDPhongParameter, isDeleteParameter, tenPhongParameter, trangThaiParameter, giaKMParameter, starParameter);
        }
    
        public virtual int SP_Quyen_Delete(Nullable<int> iDQuyen)
        {
            var iDQuyenParameter = iDQuyen.HasValue ?
                new ObjectParameter("IDQuyen", iDQuyen) :
                new ObjectParameter("IDQuyen", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Quyen_Delete", iDQuyenParameter);
        }
    
        public virtual ObjectResult<SP_Quyen_GetAll_Result> SP_Quyen_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Quyen_GetAll_Result>("SP_Quyen_GetAll");
        }
    
        public virtual ObjectResult<SP_Quyen_GetByIDQuyen_Result> SP_Quyen_GetByIDQuyen(Nullable<int> iDQuyen)
        {
            var iDQuyenParameter = iDQuyen.HasValue ?
                new ObjectParameter("IDQuyen", iDQuyen) :
                new ObjectParameter("IDQuyen", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Quyen_GetByIDQuyen_Result>("SP_Quyen_GetByIDQuyen", iDQuyenParameter);
        }
    
        public virtual int SP_Quyen_Insert(string ghiChu, string tenQuyen)
        {
            var ghiChuParameter = ghiChu != null ?
                new ObjectParameter("GhiChu", ghiChu) :
                new ObjectParameter("GhiChu", typeof(string));
    
            var tenQuyenParameter = tenQuyen != null ?
                new ObjectParameter("TenQuyen", tenQuyen) :
                new ObjectParameter("TenQuyen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Quyen_Insert", ghiChuParameter, tenQuyenParameter);
        }
    
        public virtual int SP_Quyen_Update(string ghiChu, Nullable<int> iDQuyen, string tenQuyen)
        {
            var ghiChuParameter = ghiChu != null ?
                new ObjectParameter("GhiChu", ghiChu) :
                new ObjectParameter("GhiChu", typeof(string));
    
            var iDQuyenParameter = iDQuyen.HasValue ?
                new ObjectParameter("IDQuyen", iDQuyen) :
                new ObjectParameter("IDQuyen", typeof(int));
    
            var tenQuyenParameter = tenQuyen != null ?
                new ObjectParameter("TenQuyen", tenQuyen) :
                new ObjectParameter("TenQuyen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Quyen_Update", ghiChuParameter, iDQuyenParameter, tenQuyenParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<SP_TaiKhoan_CheckLogin_Result> SP_TaiKhoan_CheckLogin(string tenDangNhap, string matKhau)
        {
            var tenDangNhapParameter = tenDangNhap != null ?
                new ObjectParameter("TenDangNhap", tenDangNhap) :
                new ObjectParameter("TenDangNhap", typeof(string));
    
            var matKhauParameter = matKhau != null ?
                new ObjectParameter("MatKhau", matKhau) :
                new ObjectParameter("MatKhau", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TaiKhoan_CheckLogin_Result>("SP_TaiKhoan_CheckLogin", tenDangNhapParameter, matKhauParameter);
        }
    
        public virtual int SP_TaiKhoan_Delete(Nullable<int> iDTaiKhoan)
        {
            var iDTaiKhoanParameter = iDTaiKhoan.HasValue ?
                new ObjectParameter("IDTaiKhoan", iDTaiKhoan) :
                new ObjectParameter("IDTaiKhoan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_TaiKhoan_Delete", iDTaiKhoanParameter);
        }
    
        public virtual ObjectResult<SP_TaiKhoan_DoiMatKhau_Result> SP_TaiKhoan_DoiMatKhau(Nullable<int> iDTaiKhoan, string matKhauCu, string matKhauMoi)
        {
            var iDTaiKhoanParameter = iDTaiKhoan.HasValue ?
                new ObjectParameter("IDTaiKhoan", iDTaiKhoan) :
                new ObjectParameter("IDTaiKhoan", typeof(int));
    
            var matKhauCuParameter = matKhauCu != null ?
                new ObjectParameter("MatKhauCu", matKhauCu) :
                new ObjectParameter("MatKhauCu", typeof(string));
    
            var matKhauMoiParameter = matKhauMoi != null ?
                new ObjectParameter("MatKhauMoi", matKhauMoi) :
                new ObjectParameter("MatKhauMoi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TaiKhoan_DoiMatKhau_Result>("SP_TaiKhoan_DoiMatKhau", iDTaiKhoanParameter, matKhauCuParameter, matKhauMoiParameter);
        }
    
        public virtual ObjectResult<SP_TaiKhoan_GetAll_Result> SP_TaiKhoan_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TaiKhoan_GetAll_Result>("SP_TaiKhoan_GetAll");
        }
    
        public virtual ObjectResult<SP_TaiKhoan_GetByIDTaiKhoan_Result> SP_TaiKhoan_GetByIDTaiKhoan(Nullable<int> iDTaiKhoan)
        {
            var iDTaiKhoanParameter = iDTaiKhoan.HasValue ?
                new ObjectParameter("IDTaiKhoan", iDTaiKhoan) :
                new ObjectParameter("IDTaiKhoan", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TaiKhoan_GetByIDTaiKhoan_Result>("SP_TaiKhoan_GetByIDTaiKhoan", iDTaiKhoanParameter);
        }
    
        public virtual int SP_TaiKhoan_Insert(string hoTen, Nullable<int> iDChucVu, Nullable<bool> isDelete, string matKhau, Nullable<System.DateTime> ngaySinh, string sDT, string tenDangNhap)
        {
            var hoTenParameter = hoTen != null ?
                new ObjectParameter("HoTen", hoTen) :
                new ObjectParameter("HoTen", typeof(string));
    
            var iDChucVuParameter = iDChucVu.HasValue ?
                new ObjectParameter("IDChucVu", iDChucVu) :
                new ObjectParameter("IDChucVu", typeof(int));
    
            var isDeleteParameter = isDelete.HasValue ?
                new ObjectParameter("IsDelete", isDelete) :
                new ObjectParameter("IsDelete", typeof(bool));
    
            var matKhauParameter = matKhau != null ?
                new ObjectParameter("MatKhau", matKhau) :
                new ObjectParameter("MatKhau", typeof(string));
    
            var ngaySinhParameter = ngaySinh.HasValue ?
                new ObjectParameter("NgaySinh", ngaySinh) :
                new ObjectParameter("NgaySinh", typeof(System.DateTime));
    
            var sDTParameter = sDT != null ?
                new ObjectParameter("SDT", sDT) :
                new ObjectParameter("SDT", typeof(string));
    
            var tenDangNhapParameter = tenDangNhap != null ?
                new ObjectParameter("TenDangNhap", tenDangNhap) :
                new ObjectParameter("TenDangNhap", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_TaiKhoan_Insert", hoTenParameter, iDChucVuParameter, isDeleteParameter, matKhauParameter, ngaySinhParameter, sDTParameter, tenDangNhapParameter);
        }
    
        public virtual int SP_TaiKhoan_Update(string hoTen, Nullable<int> iDChucVu, Nullable<int> iDTaiKhoan, string matKhau, Nullable<System.DateTime> ngaySinh, string sDT, string tenDangNhap)
        {
            var hoTenParameter = hoTen != null ?
                new ObjectParameter("HoTen", hoTen) :
                new ObjectParameter("HoTen", typeof(string));
    
            var iDChucVuParameter = iDChucVu.HasValue ?
                new ObjectParameter("IDChucVu", iDChucVu) :
                new ObjectParameter("IDChucVu", typeof(int));
    
            var iDTaiKhoanParameter = iDTaiKhoan.HasValue ?
                new ObjectParameter("IDTaiKhoan", iDTaiKhoan) :
                new ObjectParameter("IDTaiKhoan", typeof(int));
    
            var matKhauParameter = matKhau != null ?
                new ObjectParameter("MatKhau", matKhau) :
                new ObjectParameter("MatKhau", typeof(string));
    
            var ngaySinhParameter = ngaySinh.HasValue ?
                new ObjectParameter("NgaySinh", ngaySinh) :
                new ObjectParameter("NgaySinh", typeof(System.DateTime));
    
            var sDTParameter = sDT != null ?
                new ObjectParameter("SDT", sDT) :
                new ObjectParameter("SDT", typeof(string));
    
            var tenDangNhapParameter = tenDangNhap != null ?
                new ObjectParameter("TenDangNhap", tenDangNhap) :
                new ObjectParameter("TenDangNhap", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_TaiKhoan_Update", hoTenParameter, iDChucVuParameter, iDTaiKhoanParameter, matKhauParameter, ngaySinhParameter, sDTParameter, tenDangNhapParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int SP_ViTri_Delete(Nullable<int> iD_ViTri)
        {
            var iD_ViTriParameter = iD_ViTri.HasValue ?
                new ObjectParameter("ID_ViTri", iD_ViTri) :
                new ObjectParameter("ID_ViTri", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ViTri_Delete", iD_ViTriParameter);
        }
    
        public virtual ObjectResult<SP_ViTri_GetAll_Result> SP_ViTri_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ViTri_GetAll_Result>("SP_ViTri_GetAll");
        }
    
        public virtual ObjectResult<SP_ViTri_GetByID_ViTri_Result> SP_ViTri_GetByID_ViTri(Nullable<int> iD_ViTri)
        {
            var iD_ViTriParameter = iD_ViTri.HasValue ?
                new ObjectParameter("ID_ViTri", iD_ViTri) :
                new ObjectParameter("ID_ViTri", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ViTri_GetByID_ViTri_Result>("SP_ViTri_GetByID_ViTri", iD_ViTriParameter);
        }
    
        public virtual int SP_ViTri_Insert(string ghiChu, string tenViTri)
        {
            var ghiChuParameter = ghiChu != null ?
                new ObjectParameter("GhiChu", ghiChu) :
                new ObjectParameter("GhiChu", typeof(string));
    
            var tenViTriParameter = tenViTri != null ?
                new ObjectParameter("TenViTri", tenViTri) :
                new ObjectParameter("TenViTri", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ViTri_Insert", ghiChuParameter, tenViTriParameter);
        }
    
        public virtual int SP_ViTri_Update(string ghiChu, Nullable<int> iD_ViTri, string tenViTri)
        {
            var ghiChuParameter = ghiChu != null ?
                new ObjectParameter("GhiChu", ghiChu) :
                new ObjectParameter("GhiChu", typeof(string));
    
            var iD_ViTriParameter = iD_ViTri.HasValue ?
                new ObjectParameter("ID_ViTri", iD_ViTri) :
                new ObjectParameter("ID_ViTri", typeof(int));
    
            var tenViTriParameter = tenViTri != null ?
                new ObjectParameter("TenViTri", tenViTri) :
                new ObjectParameter("TenViTri", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ViTri_Update", ghiChuParameter, iD_ViTriParameter, tenViTriParameter);
        }
    }
}
